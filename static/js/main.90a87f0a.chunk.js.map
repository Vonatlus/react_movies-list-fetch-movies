{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","URL","getMovies","title","a","fetch","response","json","FindMovie","addMovies","isInList","setIsInList","useState","setTitle","setMovie","error","setError","htmlFor","type","id","placeholder","classNames","value","onChange","event","target","toLocaleLowerCase","onClick","then","Response","App","setMovies","find","addMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.90a87f0a.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const API_KEY = 'af8590f8';\nconst URL = `https://www.omdbapi.com/?apikey=${API_KEY}&t=`;\n\nexport const getMovies = async (title: string): Promise<Movie> => {\n  const response = await fetch(`${URL}${title}`);\n\n  return response.json();\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { getMovies } from '../../api';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  addMovies: (movie: Movie) => void;\n  isInList: boolean;\n  setIsInList: (is: boolean) => void;\n}\n\nexport const FindMovie: React.FC<Props> = ({ addMovies, isInList, setIsInList }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [error, setError] = useState(false);\n\n  const findButton = () => {\n    getMovies(title).then(response => {\n      setMovie(response.Response === 'True' ? response : null);\n      setError(response.Response === 'False');\n      setIsInList(false);\n    });\n  };\n\n  const addButton = () => {\n    if (movie !== null) {\n      addMovies(movie);\n    }\n\n    setMovie(null);\n    setTitle('');\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': error,\n              })}\n              value={title}\n              onChange={event => {\n                setTitle(event.target.value.toLocaleLowerCase());\n                setIsInList(false);\n                setError(false);\n              }}\n            />\n          </div>\n          {error\n            && (\n              <p className=\"help is-danger\">\n                Can&apos;t find a movie with such a title\n              </p>\n            )}\n          {isInList\n            && (\n              <p className=\"help is-danger\">\n                This is movie already in list.\n              </p>\n            )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findButton}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={addButton}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && <MovieCard movie={movie} />}\n      </div>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [isInList, setIsInList] = useState(false);\n\n  const addMovies = (movie: Movie): void => {\n    const foundMovie = movies.find(addMovie => addMovie.imdbID === movie.imdbID);\n\n    if (!foundMovie) {\n      setMovies([...movies, movie]);\n    } else {\n      setIsInList(true);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovies={addMovies}\n          isInList={isInList}\n          setIsInList={setIsInList}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}